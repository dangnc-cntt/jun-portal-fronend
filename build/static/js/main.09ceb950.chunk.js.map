{"version":3,"sources":["common/utils/Utils.ts","common/constants/Constants.ts","common/service/StorageService.ts","common/constants/HttpErrorCode.ts","common/utils/ToastUtil.ts","common/helpers/RequestHelper.ts","modules/authen/AccountService.ts","modules/profile/ProfileStore.ts","modules/authen/login/LoginStore.ts","common/form/components/Form.tsx","common/form/components/FormGroup.tsx","common/form/components/Input.tsx","common/form/components/Validations.ts","modules/authen/login/forgetPass/ForgetStore.ts","modules/authen/login/LoginComponent.tsx","modules/requireLoginHoc/requireLoginHoc.tsx","modules/role/index.tsx","modules/user/UserStore.ts","common/component/NoContent.tsx","common/component/NoContentCard.tsx","common/component/Loading.tsx","common/component/LoadingCard.tsx","modules/user/index.tsx","modules/config/ConfigService.ts","modules/config/store/ConfigStore.ts","modules/config/components/PopupAddConfig.tsx","modules/config/components/PopupEditConfig.tsx","modules/config/components/PopupRemoveConfig.tsx","modules/config/ConfigComponent.tsx","modules/user/components/DetailUser.tsx","modules/league/LeagueService.ts","modules/league/store/LeagueStore.ts","modules/league/components/PopupAddLeague.tsx","modules/league/components/PopupEditLeague.tsx","modules/league/components/PopupRemoveLeague.tsx","modules/league/LeagueComponent.tsx","modules/router/router.tsx","modules/layouts/Nav.tsx","modules/layouts/SideBar.tsx","App.tsx","serviceWorker.ts","i18next.js","index.tsx"],"names":["setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","eraseCookie","number_format","number","decimals","dec_point","thousands_sep","n","isNaN","Math","abs","t","undefined","s","parseInt","toFixed","j","substr","replace","Constants","TOKEN_EXPIRE_DAYS","TOKEN_NAME","REFRESH_TOKEN_NAME","API_URL","window","API_DOMAIN","API_EVENT_URL","TOTAL_ITEM_PER_PAGE","StorageService","token","getToken","key","localStorage","setItem","getItem","uuid","newUserId","this","setLocalStore","getLocalStore","HttpStatusCode","OK","CODE_300","BAD_REQUEST","UNAUTHORIZED","NOTFOUND","INTERNAL_SERVER_ERROR","UNKNOW_ERROR","toastUtil","message","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","warn","error","refreshAuthLogic","failedRequest","axios","post","getRefreshToken","then","tokenRefreshResponse","setToken","data","refreshToken","response","config","headers","Promise","resolve","catch","removeToken","removeRefreshToken","location","href","reject","getRequest","path","a","newHeaders","isTokenExits","createAuthRefreshInterceptor","pauseInstanceWhileRefreshing","get","status","body","humps","camelizeKeys","bodyError","errorCode","e","postRequest","params","apiCall","_method","_params","JSON","stringify","method","url","apiResponse","putRequest","deleteRequest","accountService","username","password","fullName","confirmedPassword","code","userId","profileStore","isLoading","getProfile","isProfile","observable","computed","loginStore","target","FormError","setTimeout","isShowLoginForm","pass","userName","passWord","login","accessToken","setRefreshToken","getProfiles","isLogin","isVerifyForm","Login","logOut","FormContext","React","createContext","validated","noValidate","updateValidated","updateFieldValid","removeFieldValid","FormGroupContext","observer","props","fieldValidate","state","bind","preventDefault","setState","valid","console","log","current","focus","onSubmit","filter","push","Array","isArray","reduce","previousValue","currentValue","Provider","children","Component","defaultProps","invalid","feedbackMessage","updateInvalid","updateFeedbackMessage","FormGroup","Input","_ref","floor","random","now","createRef","disabled","Boolean","validate","Object","getOwnPropertyDescriptor","HTMLInputElement","prototype","set","call","eventOnChange","Event","bubbles","dispatchEvent","validations","defaultValue","onChange","currentTarget","list_validate","isValid","event","Consumer","form_context","form_group_context","makeCss","css","invalid_css","ref","Validations","validate_type","feedback_message","_toRef","source","funcRef","toString","type","value_source","parseFloat","RegExp","test","num","maxLength","_number","regexp","pattern","_pattern","re","forgetPassStore","sessionStorage","forgetPassError","forgetPass","$","hide","show","otp","checkOtpForgetPass","passConfirm","updatePass","css_bg","LoginComponent","to","className","htmlFor","setUserNameValue","id","placeholder","setPassValue","onKeyDown","enterLogin","data-toggle","data-target","onClick","role","aria-labelledby","data-dismiss","aria-label","aria-hidden","getFormError","isHideCheckOtp","isHideUpdatePass","withLogin","WrappedComponent","userStore","getUser","listUser","detailUser","searchUser","total","totalPages","page","NoContent","withTranslation","NoContentCard","Loading","LoadingCard","style","height","map","item","wallet","balance","point","configService","configStore","configValue","configKey","getConfig","metadata","isLoadingButton","addConfig","trigger","getByConfig","byConfig","editConfig","items","deleteConfig","totalPage","PopupAddConfig","tabIndex","setConfigKey","setConfigValue","PopupEditConfig","PopupRemoveConfig","ConfigComponent","DetailUser","match","leagueService","partnerId","logo","season","active","leagueId","leagueIds","leagueStore","publish","ids","leagues","member","isChanged","reorder","startIndex","endIndex","result","from","splice","removed","forEach","league","index","sort","getLeagues","addLeague","byLeagues","errorEdit","getByLeague","errorAdd","clearForm","editLeague","deleteLeague","PopupAddLeague","addLeagues","PopupEditLeague","editLeagues","PopupRemoveLeague","deleteLeagues","LeagueComponent","onPublishClick","onDragEnd","destination","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","DroppableComponent","DraggableComponent","scope","src","alt","align","getByLeagues","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","isDragging","draggableStyle","background","droppableId","direction","droppableProps","Redirect","exact","Role","UserAdmin","logoProfile","cssLogo","css_left","css_nav","Nav","slice","SideBar","link","names","pathname","getRootPath","scroll","rootMenu","App","checkUUID","getUUID","uuidv4","setUUID","hostname","i18next","use","Backend","initReactI18next","init","lng","ns","defaultNS","keySeparator","fallbackLng","react","wait","debug","whitelist","interpolation","escapeValue","backend","loadPath","ReactDOM","render","fallback","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09ceb950.chunk.js","sourcesContent":["\n\n\nexport function setCookie(name: string, value: any, days: number) {\n    var expires = \"\";\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n        expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n}\n\nexport function getCookie(name: string) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') c = c.substring(1, c.length);\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n}\n\n\nexport function eraseCookie(name: string) {\n    setCookie(name, \"\", -1);\n}\n\nexport function number_format(number: any, decimals?: any, dec_point?: any, thousands_sep?: any) {\n    var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n\n    var t = thousands_sep == undefined ? \",\" : thousands_sep,\n        s = n < 0 ? \"-\" : \"\";\n    var i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\",\n        j: number = (j = i.length) > 3 ? j % 3 : 0;\n\n    return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t);\n}\n\n\nexport function goBack() {\n    window.history.back();\n}\n\nexport function goBack2() {\n    window.history.go(-2);\n}\n\nexport function format_slice(str: number) {\n    if (str === 0){\n        return str\n    }else {\n        return str.toFixed(1)\n    }\n}\n\n\nexport function getLocalDateTime(_date: number | string, format: \"dd_mm_yyyy\" | \"dd/mm/yyyy\" | \"dd-mm-yyyy\" | \"dd-mm-yyyy, hh:m_m:ss\") {\n    const date = new Date(_date);\n    const D = date.getDate();\n    const hh = date.getHours();\n    const m_m = date.getMinutes();\n    const ss = date.getSeconds();\n\n    const M = date.getMonth() + 1;\n    const dd = D < 10 ? \"0\" + D : D;\n    const mm = M < 10 ? \"0\" + M : M;\n    const yyyy = date.getFullYear();\n\n    let result: string = format;\n    result = result.replace(\"D\", D.toString());\n    result = result.replace(\"M\", M.toString());\n    result = result.replace(\"dd\", dd.toString());\n    result = result.replace(\"mm\", mm.toString());\n    result = result.replace(\"yyyy\", yyyy.toString());\n    result = result.replace(\"hh\", hh.toString());\n    result = result.replace(\"m_m\", m_m.toString());\n    result = result.replace(\"ss\", ss.toString());\n\n    return result\n}\n\nexport function slug(str: string) {\n    // Chuyển hết sang chữ thường\n    str = str.toLowerCase();\n\n    // xóa dấu\n    str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\n    str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\n    str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\n    str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\n    str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\n    str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\n    str = str.replace(/(đ)/g, 'd');\n\n    // Xóa ký tự đặc biệt\n    str = str.replace(/([^0-9a-z-\\s])/g, '');\n\n    // Xóa khoảng trắng thay bằng ký tự -\n    str = str.replace(/(\\s+)/g, '-');\n\n    // xóa phần dự - ở đầu\n    str = str.replace(/^-+/g, '');\n\n    // xóa phần dư - ở cuối\n    str = str.replace(/-+$/g, '');\n\n    // return\n    return str;\n}\n\nexport function convertDate(timestamp: number) {\n    var months_arr = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n    var date = new Date(timestamp * 1000);\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    var convdataTime = day + ' thg ' + month + ', ' + year;\n    return convdataTime;\n}\n\nexport function convertDatetime(timestamp: number) {\n    var months_arr = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12'];\n    var date = new Date(timestamp * 1000);\n    var year = date.getFullYear();\n    var month = months_arr[date.getMonth()];\n    var day = date.getDate();\n    var hours = date.getHours();\n    var minutes = \"0\" + date.getMinutes();\n    var seconds = \"0\" + date.getSeconds()\n    var convdataTime = day + ' thg ' + month + ', ' + year + ' - ' + hours + ':' + minutes.substr(-2)\n    return convdataTime;\n}\n\nexport function formatNumberPhone(number_phone: string) {\n    return number_phone.replace(\n        /(^(?:\\d{2}))?(\\d{3})(?=(?:\\d{5})+$)/g,\n        '$1.$2.'\n    );\n}\n\nexport function convertToLocalDate(utcTime: any) {\n    const time: number = new Date(utcTime).getTime() / 1000 + 7 * 60 * 60\n    return convertDatetime(time)\n}\n\nexport function convertToLocalDate2(utcTime: any) {\n    const time: number = new Date(utcTime).getTime() / 1000\n    return convertDatetime(time)\n}\n\nexport function timeAccept(utcTime: any) {\n    const time: number = new Date(utcTime).getTime() / 1000 + 7 * 60 * 60 + 2 * 24 * 60 * 60\n    return convertDatetime(time)\n}\n\nexport function convertToDate(utcTime: any) {\n    const time: number = new Date(utcTime).getTime() / 1000 + 7 * 60 * 60\n    return convertDate(time)\n}\n\nexport function mentionTime(utcTime: any) {\n    const time: number = new Date(utcTime).getTime() / 1000 + 7 * 60 * 60 + 4 * 24 * 60 * 60\n    return convertDatetime(time)\n}\n\nexport const numberWithCommas = (x: any) => {\n    x = x.toString().replace(/[.]/g, \"\");\n    var pattern = /(-?\\d+)(\\d{3})/;\n    while (pattern.test(x)) {\n        x = x.replace(pattern, \"$1.$2\");\n    }\n    return x;\n};\n\nexport function countJoinDate(time: number) {\n    const createdAt = new Date(time).getTime()\n    const now = new Date().getTime();\n    const distance = now - createdAt\n    let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n    if (days < 1) {\n        return \"Today\"\n    }\n    if (days >= 1 && days < 30) {\n        return days + (days == 1 ? \" day\" : \" days\") + \" ago\"\n    }\n    if (days > 30 && days < 365) {\n        let month = Math.floor(days / 30);\n        return month + (month == 1 ? \" month\" : \" months\") + \" ago\"\n    }\n    if (days >= 365) {\n        let year = Math.floor(days / 365)\n        return year + (year == 1? \" year\" : \" years\") + \" ago\"\n    }\n}\n\n\nexport function localDateTime(dateTimeString: string) {\n    if(dateTimeString == \"\" || dateTimeString == undefined) {\n        return \"\"\n    }\n    let dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleString()\n}\n\nexport function localDate(dateTimeString: string) {\n    if(dateTimeString == \"\" || dateTimeString == undefined) {\n        return \"\"\n    }\n    let dateTime = new Date(dateTimeString);\n    return dateTime.toLocaleDateString()\n}\n","export default class Constants {\n    public static TOKEN_EXPIRE_DAYS: number = 16;\n    public static TOKEN_NAME: string = \"x-predict-token\";\n    public static REFRESH_TOKEN_NAME: string = \"x-predict-refresh-token\";\n    public static API_URL: String = (window as any).API_DOMAIN;\n    public static API_EVENT_URL = Constants.API_URL + \"/v1/broadcast/events\";\n\n    public static TOTAL_ITEM_PER_PAGE = 10\n}\n","import {eraseCookie, getCookie, setCookie} from \"../utils/Utils\";\nimport Constants from \"../constants/Constants\";\n\nexport default class StorageService {\n    public static getToken(): string | null{\n        return getCookie(Constants.TOKEN_NAME);\n    }\n    public static removeToken() {\n        eraseCookie(Constants.TOKEN_NAME);\n    }\n\n    public static setToken(token: String) {\n        setCookie(Constants.TOKEN_NAME, token, Constants.TOKEN_EXPIRE_DAYS);\n    }\n\n    public static getRefreshToken(): string | null{\n        return getCookie(Constants.REFRESH_TOKEN_NAME);\n    }\n    public static removeRefreshToken() {\n        eraseCookie(Constants.REFRESH_TOKEN_NAME);\n    }\n\n    public static setRefreshToken(token: String) {\n        setCookie(Constants.REFRESH_TOKEN_NAME, token, Constants.TOKEN_EXPIRE_DAYS);\n    }\n\n    public static isTokenExits() {\n        return StorageService.getToken() !== null;\n    }\n\n    public static setLocalStore(key: any, value: any) {\n        localStorage.setItem(key, value);\n    }\n\n    public static getLocalStore(key: any) {\n        return localStorage.getItem(key);\n    }\n\n    public static setUUID(uuid: string) {\n        const newUserId = uuid.replace(\"-\", \"\");\n        this.setLocalStore(\"uuid\", newUserId);\n    }\n\n    public static getUUID() {\n        return this.getLocalStore(\"uuid\");\n    }\n}\n","\nexport default class HttpStatusCode {\n    public static OK: number = 200;\n    public static CODE_300 = 300;\n    public static BAD_REQUEST: number = 400;\n    public static UNAUTHORIZED: number = 401;\n    public static NOTFOUND: number = 404;\n    public static INTERNAL_SERVER_ERROR: number = 500;\n    public static UNKNOW_ERROR = 700\n}\n","import {Component} from \"react\";\nimport { toast } from 'react-toastify';\n\nclass ToastUtil{\n\n    public info(message:string) {\n        toast.info(message, {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        })\n    }\n\n    public success(message:string) {\n        toast.success(message, {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        })\n    }\n\n    public warning(message:string) {\n        toast.warn(message, {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        })\n    }\n\n    public error(message:string) {\n        toast.error(message, {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true\n        })\n    }\n\n}\n\nexport const toastUtil = new ToastUtil();\n\n","import humps from 'humps';\nimport axios, {Method} from \"axios\";\nimport createAuthRefreshInterceptor from 'axios-auth-refresh';\n\nimport StorageService from \"../service/StorageService\";\nimport HttpStatusCode from \"../constants/HttpErrorCode\";\nimport Constants from \"../constants/Constants\";\nimport {toastUtil} from \"../utils/ToastUtil\";\n\nexport interface IApiResponse {\n    readonly status: number;\n    readonly body: any;\n}\n\nexport interface IBodyError {\n    readonly errorCode: number;\n    readonly message: string\n}\n\n// @ts-ignore\nconst refreshAuthLogic = failedRequest => axios.post(Constants.API_URL + '/v1/auth/refreshToken', {'refreshToken': StorageService.getRefreshToken()}).then(tokenRefreshResponse => {\n    StorageService.setToken(tokenRefreshResponse.data.refreshToken);\n    failedRequest.response.config.headers[Constants.TOKEN_NAME] = tokenRefreshResponse.data.refreshToken;\n    return Promise.resolve();\n\n}).catch(function (error) {\n    StorageService.removeToken();\n    StorageService.removeRefreshToken()\n    window.location.href = \"/\"\n    return Promise.reject();\n});\n\nexport async function getRequest(path: string): Promise<IApiResponse> {\n    var newHeaders: any = {'Content-Type': 'application/json'};\n\n    if (StorageService.isTokenExits()) {\n        newHeaders[Constants.TOKEN_NAME] = StorageService.getToken();\n        createAuthRefreshInterceptor(axios, refreshAuthLogic, {\n            pauseInstanceWhileRefreshing: true\n        });\n    }\n\n    return await axios.get(Constants.API_URL + path, {headers: newHeaders})\n        .then(\n            (response) => {\n\n                const apiResponse: IApiResponse = {\n                    status: response.status,\n                    body: humps.camelizeKeys(response.data),\n                };\n                return apiResponse;\n            },\n            (error) => {\n                // StorageService.removeToken();\n                if (error.response && error.response.status === HttpStatusCode.UNAUTHORIZED || error.response.data.message == \"Invalid authentication 4\") {\n                    toastUtil.error('Token expire');\n                    // StorageService.removeToken();\n                    // window.location.href = \"/\"\n                }\n\n                let bodyError: IBodyError;\n                try {\n                    bodyError = {\n                        errorCode: error.response.data.errorCode,\n                        message: error.response.data.message\n                    }\n                } catch (e) {\n                    bodyError = {\n                        errorCode: HttpStatusCode.UNKNOW_ERROR,\n                        message: \"Unknow error, please try again later\"\n                    }\n                }\n\n                const apiResponse: IApiResponse = {\n                    status: error.response.status,\n                    body: bodyError\n                };\n                return apiResponse;\n            }\n        );\n}\n\n\nexport async function postRequest(path: string, params: object): Promise<IApiResponse> {\n    return apiCall(path, \"POST\", params);\n}\n\nexport function apiCall(path: string, _method: Method = \"POST\", _params: object): Promise<IApiResponse> {\n    var newHeaders: any = {'Content-Type': 'application/json'};\n\n    if (StorageService.isTokenExits()) {\n        newHeaders[Constants.TOKEN_NAME] = StorageService.getToken();\n        createAuthRefreshInterceptor(axios, refreshAuthLogic, {\n            pauseInstanceWhileRefreshing: true\n        });\n    }\n\n    return new Promise<IApiResponse>((resolve) => {\n        axios({\n            data: JSON.stringify(_params),\n            headers: newHeaders,\n            method: _method,\n            url: Constants.API_URL + path\n        })\n            .then(function (response) {\n                resolve({\n                    status: response.status,\n                    body: humps.camelizeKeys(response.data),\n                });\n            })\n            .catch(function (error) {\n            if (error.response && error.response.status === HttpStatusCode.UNAUTHORIZED || error.response.data.message == \"Invalid authentication 4\") {\n                toastUtil.error('Token expire');\n                // StorageService.removeToken();\n                // window.location.href = \"/\"\n            }\n\n            let bodyError: IBodyError;\n            try {\n                if (error.response && error.response.status === HttpStatusCode.INTERNAL_SERVER_ERROR) {\n                    bodyError = {\n                        errorCode: HttpStatusCode.INTERNAL_SERVER_ERROR,\n                        message: \"Internal server error, please try again later\"\n                    }\n                } else {\n                    bodyError = {\n                        errorCode: error.response.data.errorCode,\n                        message: error.response.data.message\n                    }\n                }\n\n            } catch (e) {\n                bodyError = {\n                    errorCode: HttpStatusCode.UNKNOW_ERROR,\n                    message: \"Unknow error, please try again later\"\n                }\n            }\n\n            const apiResponse: IApiResponse = {\n                status: error.response.status,\n                body: bodyError\n            };\n\n            resolve(apiResponse);\n        });\n\n    });\n}\n\nexport async function putRequest(path: string, params: object): Promise<IApiResponse> {\n    return apiCall(path, \"PUT\", params);\n}\n\nexport async function deleteRequest(path: string, params: object): Promise<IApiResponse> {\n\n    return apiCall(path, \"DELETE\", params);\n}\n","import {deleteRequest, postRequest, putRequest, IApiResponse, getRequest} from \"../../common/helpers/RequestHelper\";\nimport StorageService from \"../../common/service/StorageService\";\n\nclass AccountService {\n    public login(username: string, password: string): Promise<IApiResponse> {\n        return postRequest(`/v1/metrics/auth/login`, {username, password});\n    }\n    public signUp(fullName: string, username: string, password: string, confirmedPassword: string): Promise<IApiResponse> {\n        return postRequest(`/v1/metrics/auth/register`, {fullName, username, password, confirmedPassword});\n    }\n\n    public logOut(): Promise<IApiResponse> {\n        const url: string = '/v1/metrics/auth/logout';\n        return deleteRequest(url, {refreshToken: StorageService.getRefreshToken()});\n    }\n\n    public resendCode(username:string):Promise<IApiResponse>{\n        return postRequest(`/v1/auth/resend_register_code`, {username})\n    }\n\n    public checkOtp(username: string, code: string):Promise <IApiResponse>{\n        return putRequest(`/v1/auth/verify`,{username, code})\n    }\n\n    public forgetPass(username: string): Promise<IApiResponse>{\n        return postRequest(`/v1/auth/forgot_password?collection=send_otp`, {username})\n    }\n\n    public updatePass(username: string, password: string, confirmedPassword: string): Promise<IApiResponse>{\n        return putRequest(`/v1/auth/forgot_password?collection=update_password`,{username, password, confirmedPassword})\n    }\n\n    public checkOtpForgetPass(username: string, code: string):Promise <IApiResponse>{\n        return postRequest(`/v1/auth/forgot_password?collection=check_otp`,{username, code})\n    }\n\n    public getProfile():Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/users/_me`)\n    }\n\n\n    public getUser(): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/accounts?page=0&size=10`)\n    }\n\n    public detailUser(userId: number): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/accounts/${userId}`)\n    }\n\n    public searchUser(userId: number): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/accounts?userId=${userId}`)\n    }\n}\n\nexport const accountService =  new AccountService();\n","import {computed, observable} from \"mobx\";\nimport {accountService} from \"../authen/AccountService\";\nimport HttpStatusCode from \"../../common/constants/HttpErrorCode\";\n\nexport interface IProfile {\n    \"userId\": string,\n    \"fullName\": string,\n}\n\n\nclass ProfileStore {\n    @observable public isLoading: boolean = false;\n    @observable public getProfile?: IProfile;\n    @observable public isProfile: boolean = false;\n    @observable public isOpen: boolean = true;\n\n    @computed get getUserData() {\n        return this.getProfile\n    }\n\n    async getProfiles() {\n        this.isLoading = true;\n        const response = await accountService.getProfile();\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            this.isProfile = true;\n            this.getProfile = response.body;\n        }\n\n    }\n}\n\nexport const profileStore = new ProfileStore();\n","import {observable} from 'mobx';\nimport StorageService from \"../../../common/service/StorageService\";\nimport {accountService} from \"../AccountService\";\nimport {toastUtil} from \"../../../common/utils/ToastUtil\";\nimport {profileStore} from \"../../profile/ProfileStore\";\nimport HttpStatusCode from \"../../../common/constants/HttpErrorCode\";\n\n\nexport interface IApiResponse {\n    readonly name: string | number;\n    readonly avatarUrl: string;\n    user: { id: number }\n}\n\nclass LoginStore {\n    @observable public isShowLoginForm = false;\n    @observable public username = \"\";\n    @observable public password = \"\";\n    @observable public userData: null | IApiResponse = null;\n    @observable public isManageShow: boolean = false;\n    @observable public contacts: any[] = [];\n    @observable public isLogin: boolean = false;\n    @observable public isLoading: boolean = false;\n    @observable public isVerifyForm: boolean = false;\n    @observable public FormError?: {\n        name?: string,\n        pass?: string,\n        message?: string,\n    };\n\n    setUserNameValue(e: any) {\n        this.username = e.target.value;\n        this.FormError = undefined\n    }\n\n\n    setPassValue(e: any) {\n        this.password = e.target.value;\n        this.FormError = undefined\n    }\n\n\n    async FormLogin() {\n        setTimeout(() => this.isShowLoginForm = true, 100);\n        this.FormError = {\n            pass: '',\n            message: '',\n            name: ''\n        }\n    }\n\n    async Login() {\n\n        let userName: string = this.username;\n        let passWord: string = this.password;\n\n        if (userName === \"\") {\n            this.FormError = {name: 'Username must not be blank'};\n            return false;\n        }\n\n        if (passWord.length > 24 || passWord.length < 6) {\n            this.FormError = {pass: \"Password must be between 6 and 24 characters\"};\n            return false;\n        }\n\n        if (userName !== \"\" && passWord !== \"\") {\n            this.isLoading = true;\n            const data: any = await accountService.login(userName, passWord);\n            this.isLoading = false;\n\n            if(data.status === HttpStatusCode.OK){\n                let token: string = data.body.accessToken;\n                StorageService.setToken(token);\n\n                let refreshToken: string = data.body.refreshToken;\n                StorageService.setRefreshToken(refreshToken);\n\n                toastUtil.success('Login in success');\n                await profileStore.getProfiles();\n                this.isShowLoginForm = false;\n                this.isLogin = true;\n            }else {\n                this.FormError = {message: data.body.message};\n                this.isShowLoginForm = false;\n                this.isVerifyForm = true;\n            }\n        }\n\n    }\n\n    async enterLogin(e: any) {\n        if (e.key === 'Enter') {\n            await this.Login()\n        }\n    }\n\n    async logOut() {\n        const result = await accountService.logOut();\n        if (result.status === HttpStatusCode.OK) {\n            StorageService.removeToken();\n            StorageService.removeRefreshToken();\n            window.location.href = \"/\"\n        }\n    }\n\n}\n\nexport const loginStore = new LoginStore();\n","import React, {RefObject} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {toastUtil} from \"../../utils/ToastUtil\";\n\n\ninterface IFormProps {\n    onSubmit?: any,\n    noValidate?: boolean,\n    className?: string,\n    id?: string\n}\n\ninterface IFormState {\n    validated: boolean,\n    noValidate: boolean\n}\n\nexport interface IFormContext {\n    validated: boolean,\n    noValidate: boolean,\n    updateValidated: (value: boolean) => {}\n    updateFieldValid: (key: number | string, value: boolean, target: any) => {},\n    removeFieldValid: (key: number | string) => {},\n}\n\nexport const FormContext = React.createContext({\n    validated: false,\n    noValidate: false,\n    updateValidated: (value: boolean) => {\n    },\n    updateFieldValid: (key: number | string, value: boolean, target: any) => {\n    },\n    removeFieldValid: (key: number | string) => {\n    },\n});\n\n@observer\nexport default class Form extends React.Component<IFormProps, IFormState> {\n    fieldValidate: { key: number | string, valid: boolean, target: RefObject<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement> }[] = [];\n    static defaultProps = {\n        noValidate: false\n    };\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            validated: false,\n            noValidate: this.props.noValidate ? this.props.noValidate : false\n        };\n        this.updateValidated = this.updateValidated.bind(this);\n        this.updateFieldValid = this.updateFieldValid.bind(this);\n        this.removeFieldValid = this.removeFieldValid.bind(this);\n    }\n\n    public onSubmit(e: any) {\n        e.preventDefault();\n        this.setState({\n            validated: true\n        });\n\n        let valid = true;\n\n        for (let i = 0; i < this.fieldValidate.length; i++) {\n            if (!this.props.noValidate && !this.fieldValidate[i].valid) {\n                console.log(`invalid: Fields ${this.fieldValidate[i].target}`);\n                try {\n                    // Focus to field invalid\n                    if (this.fieldValidate[i] && this.fieldValidate[i].target && this.fieldValidate[i].target.current !== null) {\n                        // @ts-ignore\n                        this.fieldValidate[i].target.current.focus();\n                    }\n                    valid = false;\n                    break;\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n        }\n\n        if (valid || this.props.noValidate) {\n            this.props.onSubmit(e);\n        } else if (!valid && !this.props.noValidate) {\n            toastUtil.error('Vui lòng nhập đầy đủ thông tin');\n            console.log('Validate form invalid');\n        }\n    }\n\n    updateValidated(value: boolean) {\n        this.setState({\n            validated: value\n        })\n    }\n\n    async updateFieldValid(key: number | string, value: boolean, target: any) {\n        let filter: { key: string | number, valid: boolean | undefined, target?: any }[] | { key: string | number, valid: boolean | undefined, target?: any } | [] = this.fieldValidate.filter((value: { key: string | number, valid: boolean | undefined, target?: any }) => value.key === key);\n        if (filter.length === 0) {\n            this.fieldValidate.push({key: key, valid: value, target: target});\n        } else if (filter.length > 1) {\n            console.log('Error duplicate key');\n        } else if (Array.isArray(filter)) {\n            filter = filter[0];\n            filter.valid = value;\n        }\n    }\n\n    async removeFieldValid(key: number | string) {\n        this.fieldValidate = this.fieldValidate.reduce((previousValue: { key: number | string, valid: boolean, target: any }[], currentValue: { key: number | string, valid: boolean, target: any }) => {\n            if (currentValue.key !== key) {\n                previousValue.push(currentValue);\n            }\n            return previousValue;\n        }, []);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return <form {...this.props} onSubmit={(e: any) => this.onSubmit(e)}>\n            <FormContext.Provider value={{\n                validated: this.state.validated,\n                noValidate: this.state.noValidate,\n                // @ts-ignore\n                fieldValidate: this.state.fieldValidate,\n                updateValidated: this.updateValidated,\n                updateFieldValid: this.updateFieldValid,\n                removeFieldValid: this.removeFieldValid\n            }}>\n                {this.props.children}\n            </FormContext.Provider>\n        </form>\n    }\n}\n","import React from \"react\";\n\ninterface IFormGroupProps {\n    className?: string,\n    id?: string\n}\n\ninterface IFormGroupState {\n    invalid: boolean,\n    feedbackMessage: string,\n    validated: boolean\n}\n\nexport interface IFormGroupContext {\n    invalid: boolean,\n    validated: boolean,\n    feedbackMessage: string,\n    updateInvalid: (value: boolean) => {}\n    updateValidated: (value: boolean) => {}\n    updateFeedbackMessage: (value: string) => {}\n}\n\nexport const FormGroupContext = React.createContext({\n    invalid: false,\n    validated: false,\n    feedbackMessage: '',\n    updateInvalid: (value: boolean) => {\n    },\n    updateValidated: (value: boolean) => {\n    },\n    updateFeedbackMessage: (value: string) => {\n    }\n});\n\nexport default class FormGroup extends React.Component<IFormGroupProps, IFormGroupState> {\n    constructor(props: IFormGroupProps) {\n        super(props);\n        this.state = {\n            invalid: false,\n            feedbackMessage: '',\n            validated: false\n        };\n        this.updateInvalid = this.updateInvalid.bind(this);\n        this.updateValidated = this.updateValidated.bind(this);\n        this.updateFeedbackMessage = this.updateFeedbackMessage.bind(this);\n    }\n\n    updateInvalid(value: boolean) {\n        this.setState({\n            invalid: value\n        });\n    }\n\n    updateValidated(value: boolean) {\n        this.setState({validated: value});\n    }\n\n    updateFeedbackMessage(value: string) {\n        this.setState({\n            feedbackMessage: value\n        })\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return <FormGroupContext.Provider value={{\n            invalid: this.state.invalid,\n            validated: this.state.validated,\n            feedbackMessage: this.state.feedbackMessage,\n            updateInvalid: this.updateInvalid,\n            updateValidated: this.updateValidated,\n            updateFeedbackMessage: this.updateFeedbackMessage\n        }}>\n            <div {...this.props}>\n                {this.props.children}\n            </div>\n        </FormGroupContext.Provider>\n    }\n}\n","import React, {RefObject} from \"react\";\nimport {FormContext, IFormContext} from \"./Form\";\nimport {FormGroupContext, IFormGroupContext} from \"./FormGroup\";\nimport {css} from \"@emotion/core\";\n\ninterface IPropsInput {\n    ref?: any,\n    name?: string,\n    id?: string,\n    className?: string,\n    placeholder?: string,\n    defaultValue?: string,\n    autoFocus?: boolean,\n    required?: boolean,\n    type?: string,\n    validations?: any[],\n    disabled?: boolean,\n    invalid_css?: any,\n    onChange?: (e: any) => void\n}\n\ninterface IStateInput {\n    disabled: boolean\n}\n\nexport default class Input extends React.Component<IPropsInput, IStateInput> {\n    public FormContext!: IFormContext;\n    public FormGroupContext!: IFormGroupContext;\n    public key!: number;\n    public _ref: RefObject<any>;\n\n    set value(value: string) {\n        this.validate(value);\n        if (this._ref.current) {\n            const nativeInputValueSetter = (Object as any).getOwnPropertyDescriptor((window as any).HTMLInputElement.prototype, \"value\").set;\n            nativeInputValueSetter.call(this._ref.current, value);\n            const eventOnChange = new Event('input', {bubbles: true});\n            this._ref.current.dispatchEvent(eventOnChange);\n        }\n    }\n\n    set disabled(value: boolean) {\n        this.setState({\n            disabled: value\n        })\n    }\n\n    public focus() {\n        this._ref.current && this._ref.current.focus();\n    }\n\n    constructor(props: any) {\n        super(props);\n        this.key = Math.floor(Math.random() * Date.now());\n        this._ref = React.createRef();\n        this.state = {\n            disabled: Boolean(this.props.disabled)\n        }\n    }\n\n    componentDidMount(): void {\n        if (this.props.validations) {\n            this.FormContext.updateFieldValid(this.key, this.FormContext.noValidate, this._ref);\n            this.FormGroupContext.updateInvalid(true);\n            this.FormGroupContext.updateFeedbackMessage(this.props.validations ? this.props.validations[0].feedbackMessage : '');\n        }\n\n        if (this.props.defaultValue) {\n            this.validate(this.props.defaultValue);\n            this.props.onChange && this.props.onChange({\n                preventDefault: (): boolean => false,\n                currentTarget: this._ref.current,\n            });\n        }\n    }\n\n    componentWillUnmount() {\n        this.FormContext.removeFieldValid(this.key);\n    }\n\n    public validate(value: string) {\n        const list_validate = this.props.validations;\n        if (Array.isArray(list_validate)) {\n            let valid: boolean = true;\n            for (let i = 0; i < list_validate.length; i++) {\n                valid = list_validate[i].validate.isValid(value);\n                this.FormGroupContext.updateFeedbackMessage(list_validate[i].feedbackMessage);\n                if (!valid) {\n                    break;\n                }\n            }\n            this.FormGroupContext.updateInvalid(!valid);\n            this.FormContext.updateFieldValid(this.key, valid, this._ref);\n        }\n    }\n\n    onChange(event: any) {\n        this.FormGroupContext && !this.FormGroupContext.validated && this.FormGroupContext.updateValidated(true);\n        this.validate(event.currentTarget.value);\n        this.props.onChange && this.props.onChange(event);\n    }\n\n    render(): React.ReactElement<any, string | React.JSXElementConstructor<any>> | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return <FormContext.Consumer>\n            {(form_context: any) => {\n                this.FormContext = form_context;\n                return <FormGroupContext.Consumer>\n                    {(form_group_context: any) => {\n                        this.FormGroupContext = form_group_context;\n                        let makeCss = css``;\n                        if ((form_group_context.validated || form_context.validated) && !this.FormContext.noValidate) {\n                            makeCss = this.props.invalid_css ? this.props.invalid_css : css`\n                                border: solid 1px ${this.FormGroupContext.invalid ? 'red' : 'green'};\n                                &:focus{\n                                    border: solid 1px ${this.FormGroupContext.invalid ? 'red' : 'green'};\n                                    box-shadow: 0 0 6px 0px ${this.FormGroupContext.invalid ? 'red' : 'green'};\n                                }\n                            `;\n                        }\n                        return <input {...this.props} css={makeCss}\n                                      ref={this._ref}\n                                      disabled={this.state.disabled}\n                                      onChange={(e: any) => this.onChange(e)}/>;\n                    }}\n                </FormGroupContext.Consumer>\n            }}\n        </FormContext.Consumer>;\n    }\n}\n","export default class Validations {\n    public feedbackMessage: string;\n    public validate: any;\n\n    constructor(validate_type: any, feedback_message: string = '') {\n        this.feedbackMessage = feedback_message;\n        this.validate = validate_type;\n    }\n\n    public static compare(current: any, _toRef: string) {\n        return {\n            isValid: (source: string, funcRef = _toRef) => {\n                if (current[funcRef]) {\n                    const value: string = current[funcRef]._ref.current.value.toString();\n                    return source === value;\n                } else\n                    return true;\n            },\n            type: \"compare\"\n        }\n    }\n\n    public static greaterThan(current: any, _toRef: string) {\n        return {\n            isValid: (source: string, funcRef: string = _toRef) => {\n                if (current[funcRef]) {\n                    let value: string = current[funcRef]._ref.current.value.toString().replace(/[^\\d]/mg, \"\");\n                    let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                    value = value ? value : \"0\";\n                    value_source = value_source ? value_source : \"0\";\n                    return parseFloat(value_source) > parseFloat(value);\n                } else\n                    return true;\n            },\n            type: \"greaterThan\"\n        }\n    }\n\n    public static greaterThanEqual(current: any, _toRef: string) {\n        return {\n            isValid: (source: string, funcRef: string = _toRef) => {\n                if (current[funcRef]) {\n                    let value: string = current[funcRef]._ref.current.value.toString().replace(/[^\\d]/mg, \"\");\n                    let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                    value = value ? value : \"0\";\n                    value_source = value_source ? value_source : \"0\";\n                    return parseFloat(value_source) >= parseFloat(value);\n                } else\n                    return true;\n            },\n            type: \"greaterThanEqual\"\n        }\n    }\n\n    public static lessThan(current: any, _toRef: any) {\n        return {\n            isValid: (source: string, funcRef = _toRef) => {\n                if (current[funcRef]) {\n                    let value: string = current[funcRef]._ref.current.value.toString().replace(/[^\\d]/mg, \"\");\n                    let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                    value = value ? value : \"0\";\n                    value_source = value_source ? value_source : \"0\";\n                    return parseFloat(value_source) < parseFloat(value);\n                } else\n                    return true;\n            },\n            type: \"lessThan\"\n        }\n    }\n\n    public static lessThanEqual(current: any, _toRef: any) {\n        return {\n            isValid: (source: string, funcRef = _toRef) => {\n                if (current[funcRef]) {\n                    let value: string = current[funcRef]._ref.current.value.toString().replace(/[^\\d]/mg, \"\");\n                    let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                    value = value ? value : \"0\";\n                    value_source = value_source ? value_source : \"0\";\n                    return parseFloat(value_source) <= parseFloat(value);\n                } else\n                    return true;\n            },\n            type: \"lessThanEqual\"\n        }\n    }\n\n    public static greaterThanNumber(number: number) {\n        return {\n            isValid: (source: string) => {\n                let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                return parseFloat(value_source) > number\n            },\n            type: \"greaterThanNumber\"\n        }\n    }\n\n    public static lessThanNumber(number: number) {\n        return {\n            isValid: (source: string) => {\n                let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                return parseFloat(value_source) < number\n            },\n            type: \"lessThanNumber\"\n        }\n    }\n\n    public static lessThanEqualNumber(number: number) {\n        return {\n            isValid: (source: string) => {\n                let value_source: string = source.toString().replace(/[^\\d]/mg, \"\");\n                return parseFloat(value_source) <= number\n            },\n            type: \"lessThanEqualNumber\"\n        }\n    }\n\n    public static email() {\n        return {\n            isValid: (source: string) => {\n                if (!source) {\n                    return false;\n                }\n                //eslint-disable-next-line\n                //eslint-disable-next-line\n                const re = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\n                return re.test(source);\n            },\n            type: \"email\"\n        }\n    }\n\n    public static required() {\n        return {isValid: (source: string) => source}\n    }\n\n    public static minLength(num: number) {\n        return {\n            // tslint:disable-next-line:variable-name\n            isValid: (source: string, _number: number = num) => source ? source.length >= num : 0 >= num,\n            type: 'minLength'\n        }\n    }\n\n    public static maxLength = (num: number) => {\n        return {\n            // tslint:disable-next-line:variable-name\n            isValid: (source: string, _number = num) => source ? source.length <= _number : 0 <= _number,\n            type: 'maxLength'\n        }\n    };\n\n    public static regexp = (pattern: RegExp | any) => {\n        return {\n            isValid: (source: string, _pattern = pattern) => {\n                if (!source) {\n                    return false;\n                }\n                const re = new RegExp(_pattern);\n                return re.test(source);\n            },\n        }\n    }\n}\n","import {observable, computed} from \"mobx\";\nimport {accountService} from \"../../AccountService\";\nimport HttpStatusCode from \"../../../../common/constants/HttpErrorCode\";\nimport $ from \"jquery\";\nimport {toastUtil} from \"../../../../common/utils/ToastUtil\";\n\nexport function clearInputOtp(){\n    forgetPassStore.forgetPassError={otp:undefined}\n}\nexport function clearInputName(){\n    forgetPassStore.forgetPassError={username:undefined}\n}\n\nexport function clearInputPass(){\n    forgetPassStore.forgetPassError={pass:undefined}\n}\nexport function clearInputPassConfirm(){\n    forgetPassStore.forgetPassError={passConfirm:undefined}\n}\n\n\nclass ForgetStore {\n    @observable isLoading = false;\n    @observable public userName!: string;\n    @observable public passWord!: string;\n    @observable public passConfirm!: string;\n    @observable public otp!: string;\n    @observable public forgetPassError?: {\n        username?: string,\n        message?: string,\n        pass?: string\n        otp?: string\n        passConfirm?: string\n    };\n\n    @computed get getFormError() {\n        return this.forgetPassError\n    }\n\n\n    async forgetPass() {\n\n        const username: string = forgetPassStore.userName;\n        sessionStorage.setItem('username', username);\n        let filter: RegExp = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n        if (!filter.test(username)) {\n            forgetPassStore.forgetPassError = {username: \"Please enter a valid Email\"};\n            return false;\n        }\n        this.isLoading = true;\n        const response = await accountService.forgetPass(username);\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            $('#ForgotPass').hide();\n            setTimeout(() => $('#check_otp_password').show(), 300)\n        } else {\n            forgetPassStore.forgetPassError = {username: response.body.message};\n        }\n    }\n\n    async checkOtpForgetPass() {\n        const username: string = forgetPassStore.userName;\n        const otp: string = forgetPassStore.otp;\n\n        if (otp.length < 6) {\n            forgetPassStore.forgetPassError = {otp: \"6-digit OTP code\"};\n            return false\n        }\n        this.isLoading = true;\n        const response = await accountService.checkOtpForgetPass(username, otp);\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            $('#check_otp_password').hide();\n            setTimeout(() => $('#updatePass').show(), 300)\n        } else {\n            forgetPassStore.forgetPassError = {otp:response.body.message}\n        }\n    }\n\n    async updatePass() {\n        const username = this.userName;\n        const pass = this.passWord;\n        const passConfirm = this.passConfirm;\n\n        if (pass.length > 20 || pass.length < 6) {\n            forgetPassStore.forgetPassError={pass:\"Password must be between 6 and 20 characters\"};\n            return false;\n        }\n\n        if (pass != passConfirm) {\n            forgetPassStore.forgetPassError={passConfirm:\"Password and confirmation password are not the same\"};\n            return false;\n        }\n        this.isLoading = true;\n        const response = await accountService.updatePass(username, pass, passConfirm);\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            toastUtil.success('Forgot PassWord Success');\n            $('.modal-backdrop').hide();\n            $('#updatePass').hide();\n        } else {\n            forgetPassStore.forgetPassError = {message :response.body.message}\n        }\n\n    }\n}\n\nexport const forgetPassStore = new ForgetStore();","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport \"./LoginStyle.scss\";\nimport Input from \"../../../common/form/components/Input\";\nimport FormGroup from \"../../../common/form/components/FormGroup\";\nimport {loginStore} from \"./LoginStore\";\nimport Validations from \"../../../common/form/components/Validations\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport {profileStore} from '../../profile/ProfileStore';\nimport {\n    clearInputName,\n    clearInputOtp,\n    clearInputPass,\n    clearInputPassConfirm,\n    forgetPassStore\n} from \"./forgetPass/ForgetStore\";\nimport $ from \"jquery\";\nimport {css} from \"@emotion/core\";\n\nconst cssLogo = css`\n    width: 160px;\n    height: 56px\n`;\n\nconst css_bg = css`\n  background-color: white;\n  `;\n\n\n@observer\nclass LoginComponent extends Component {\n    public isHideCheckOtp() {\n        $('.modal-backdrop').hide();\n        $('#check_otp_password').hide();\n    }\n\n    public isHideUpdatePass() {\n        $('.modal-backdrop').hide();\n        $('#updatePass').hide();\n    }\n\n    render() {\n        if (profileStore.getProfile) {\n            return <Redirect to=\"/\"/>\n        } else return (\n            <div className=\"login\">\n                <div className=\"container-scroller\">\n                    <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\n                        <div className=\"content-wrapper d-flex align-items-stretch auth auth-img-bg\">\n                            <div className=\"row flex-grow\">\n                                <div css={css_bg}\n                                     className=\"col-lg-12 d-flex align-items-center justify-content-center\">\n                                    <div className=\"col-6\">\n                                        <div className=\"auth-form-transparent p-3\">\n                                            <div className=\"d-flex justify-content-center\">\n                                                {/*<img css={cssLogo} src={} alt=\"\"/>*/}\n                                            </div>\n                                            <h2 className=\"text-center mt-2\">Login</h2>\n                                            <form className=\"pt-3\">\n                                                <span\n                                                    className=\"error\">{loginStore.FormError && loginStore.FormError.message}</span>\n                                                <FormGroup className=\"form-group\">\n                                                    <label htmlFor=\"exampleInputEmail\">Username</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"input-group-prepend bg-transparent\">\n                                                <span className=\"input-group-text bg-transparent border-right-0\">\n                                               <i className=\"fa fa-envelope text-info\"/>\n                                                </span>\n                                                        </div>\n                                                        <Input type=\"text\"\n                                                               validations={[new Validations(Validations.regexp(/(^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$|^\\d{10,10})$/),)]}\n                                                               onChange={(e) => {\n                                                                   loginStore.setUserNameValue(e)\n                                                               }}\n                                                               className=\"form-control form-control-lg border-left-0\"\n                                                               id=\"exampleInputEmail\" placeholder=\"Username\"/>\n                                                    </div>\n                                                    <p className=\"error\">{loginStore.FormError && loginStore.FormError.name}</p>\n                                                </FormGroup>\n                                                <FormGroup className=\"form-group\">\n                                                    <label htmlFor=\"exampleInputPassword\">Password</label>\n                                                    <div className=\"input-group\">\n                                                        <div className=\"input-group-prepend bg-transparent\">\n                                                    <span className=\"input-group-text bg-transparent border-right-0\">\n                                                      <i className=\"fas fa-lock text-info\"/>\n                                                    </span>\n                                                        </div>\n                                                        <input type=\"password\" onChange={(e) => {\n                                                            loginStore.setPassValue(e)\n                                                        }}\n                                                               onKeyDown={(e) => loginStore.enterLogin(e)}\n                                                               className=\"form-control form-control-lg border-left-0\"\n                                                               id=\"exampleInputPassword\" placeholder=\"Password\"/>\n                                                    </div>\n                                                    <p className=\"error\">{loginStore.FormError && loginStore.FormError.pass}</p>\n                                                </FormGroup>\n                                                <div className=\"my-2 d-flex justify-content-between align-items-center\">\n                                                    <div className=\"form-check\">\n                                                        <label className=\"form-check-label text-muted\">\n                                                            <input type=\"checkbox\" className=\"form-check-input\"/>\n                                                            Keep me signed in\n                                                            <i className=\"input-helper text-info\"/></label>\n                                                    </div>\n                                                    <a href=\"#\" className=\"auth-link text-black\"\n                                                       data-toggle=\"modal\" data-target=\"#ForgotPass\"\n                                                    >Forgot password?</a>\n                                                </div>\n                                                <div className=\"my-3\">\n                                                    {!loginStore.isLoading ?\n                                                        <a className=\"btn text-white btn-block btn-info btn-lg font-weight-medium auth-form-btn d-flex align-items-center justify-content-center\"\n                                                           onClick={() => loginStore.Login()}>LOGIN</a> :\n                                                        <a className=\"btn text-white btn-block btn-info btn-lg font-weight-medium auth-form-btn d-flex align-items-center justify-content-center\">\n                                                            <i className=\"fa fa-spinner fa-spin\"/>\n                                                        </a>}\n                                                </div>\n                                                <div className=\"mb-2 d-none\">\n                                                    <button type=\"button\"\n                                                            className=\"btn btn-facebook auth-form-btn flex-grow mr-1\">\n                                                        <i className=\"fab fa-facebook-f mr-2\"/>Facebook\n                                                    </button>\n                                                    <button type=\"button\"\n                                                            className=\"btn btn-google auth-form-btn flex-grow ml-1\">\n                                                        <i className=\"fab fa-google mr-2\"/>Google\n                                                    </button>\n                                                </div>\n                                                <div className=\"text-center mt-4 font-weight-light\">\n                                                    Don't have an account? <Link to={`/signUp`}\n                                                                                 className=\"text-info\">Create</Link>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"modal fade\" id=\"ForgotPass\" role=\"dialog\"\n                     aria-labelledby=\"ForgotPass\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">Forgot Your Password</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">×</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <label>Username</label>\n                                <input type=\"text\" className=\"form-control form-control-lg mb-2\"\n                                       onChange={(e) => {\n                                           forgetPassStore.userName = e.currentTarget.value;\n                                           clearInputName()\n                                       }}\n                                       placeholder=\"Email\"/>\n                                <span\n                                    className=\"error pl-3\">{forgetPassStore.getFormError && forgetPassStore.getFormError.username}</span>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-light\" data-dismiss=\"modal\">Cancel</button>\n\n                                {forgetPassStore.isLoading ?\n                                    <button type=\"button\" className=\"btn btn-info\">\n                                        <i className=\"fa fa-spinner fa-spin\"/>\n                                    </button> :\n                                    <button type=\"button\" className=\"btn btn-info\"\n                                            onClick={() => forgetPassStore.forgetPass()}>Reset Password\n                                    </button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"modal fade show\" id=\"check_otp_password\" role=\"dialog\"\n                     aria-labelledby=\"check_otp_password\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">Check OTP</h5>\n                                <button type=\"button\" className=\"close\" onClick={() => this.isHideCheckOtp()}>\n                                    <span aria-hidden=\"true\">×</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                <label>OTP</label>\n                                <input type=\"text\" className=\"form-control form-control-lg mb-2\"\n                                       onChange={(e) => {\n                                           forgetPassStore.otp = e.currentTarget.value;\n                                           clearInputOtp()\n                                       }}\n                                       placeholder=\"Enter Otp\"/>\n                                <span\n                                    className=\"error pl-3\">{forgetPassStore.getFormError && forgetPassStore.getFormError.otp}</span>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-light\"\n                                        onClick={() => this.isHideCheckOtp()}>Cancel\n                                </button>\n                                {forgetPassStore.isLoading ?\n                                    <button type=\"button\" className=\"btn btn-info\">\n                                        <i className=\"fa fa-spinner fa-spin\"/>\n                                    </button> :\n                                    <button type=\"button\" className=\"btn btn-info\"\n                                            onClick={() => forgetPassStore.checkOtpForgetPass()}>Check Otp\n                                    </button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"modal fade show\" id=\"updatePass\" role=\"dialog\"\n                     aria-labelledby=\"check_otp_password\">\n                    <div className=\"modal-dialog\" role=\"document\">\n                        <div className=\"modal-content\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\">Create a password</h5>\n                                <button type=\"button\" className=\"close\" onClick={() => this.isHideUpdatePass()}>\n                                    <span aria-hidden=\"true\">×</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body\">\n                                    <span\n                                        className=\"error pb-3\">{forgetPassStore.getFormError && forgetPassStore.getFormError.message}</span>\n                                <FormGroup className=\"pb-2\">\n                                    <label>Password</label>\n                                    <input type=\"password\" className=\"form-control form-control-lg mb-2\"\n                                           onChange={(e) => {\n                                               forgetPassStore.passWord = e.currentTarget.value;\n                                               clearInputPass()\n                                           }}\n                                           placeholder=\"Enter your new password\"/>\n                                    <span\n                                        className=\"error\">{forgetPassStore.getFormError && forgetPassStore.getFormError.pass}</span>\n                                </FormGroup>\n                                <FormGroup className=\"pb-2\">\n                                    <label>Confirm Password</label>\n                                    <input type=\"password\" className=\"form-control form-control-lg mb-2\"\n                                           onChange={(e) => {\n                                               forgetPassStore.passConfirm = e.currentTarget.value;\n                                               clearInputPassConfirm()\n                                           }}\n                                           placeholder=\"Confirm Password\"/>\n                                    <span\n                                        className=\"error\">{forgetPassStore.getFormError && forgetPassStore.getFormError.passConfirm}</span>\n                                </FormGroup>\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button type=\"button\" className=\"btn btn-light\"\n                                        onClick={() => this.isHideUpdatePass()}>Cancel\n                                </button>\n                                {forgetPassStore.isLoading ?\n                                    <button type=\"button\" className=\"btn btn-info\">\n                                        <i className=\"fa fa-spinner fa-spin\"/>\n                                    </button> :\n                                    <button type=\"button\" className=\"btn btn-info\"\n                                            onClick={() => forgetPassStore.updatePass()}>Change Password\n                                    </button>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LoginComponent;","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport {profileStore} from '../profile/ProfileStore'\nimport { Redirect } from 'react-router';\n\n\nexport function withLogin(WrappedComponent:any){\n\n    @observer\n    class AuthenticatedComponent extends React.Component {\n         render() {\n            if(profileStore.isProfile){\n                return(\n                    <WrappedComponent/>\n                )\n            }\n            else{\n                return <Redirect to=\"/login\"/>\n            }\n         }\n     }\n     return AuthenticatedComponent\n } \n ","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { withLogin } from '../requireLoginHoc/requireLoginHoc';\nimport { profileStore } from '../profile/ProfileStore';\nimport { Redirect } from 'react-router';\n\n@observer\nclass index extends Component {\n\n    render() {\n       if(profileStore.getProfile){\n           return <Redirect to=\"/user\"/>\n       }else return true\n        \n    }\n}\n\nexport default withLogin(index);","import {observable} from \"mobx\";\nimport {accountService} from \"../authen/AccountService\";\nimport HttpStatusCode from \"../../common/constants/HttpErrorCode\";\n\ninterface IUser {\n    id: number,\n    username: string,\n    state: string,\n    role: string\n    point: {\n        point: number\n    }\n    confirmedAt: string,\n    lastLoginAt: string,\n    wallet: {\n        balance: number\n    }\n}\n\n\nclass UserStore {\n    @observable public listUser: IUser[] = [];\n    @observable public isLoading: boolean = false;\n    @observable metadata: {total: number, totalPages: number, page: number} = {total: 0, totalPages: 3, page: 0};\n\n\n    async getUser(){\n        this.isLoading = true;\n        const response = await accountService.getUser();\n        this.isLoading = false;\n        if(response.status === HttpStatusCode.OK){\n            this.listUser = response.body.data;\n        }\n    }\n\n    async detailUser(userId: number){\n        this.isLoading = true;\n        const response = await accountService.detailUser(userId);\n        this.isLoading = false;\n        if(response.status === HttpStatusCode.OK){\n\n        }\n    }\n\n    async searchUser(userId: number){\n        this.isLoading = true;\n        const response = await accountService.searchUser(userId);\n        this.isLoading = false;\n        if(response.status === HttpStatusCode.OK){\n\n        }\n    }\n}\n\nexport const userStore = new UserStore();","import React, {Component} from 'react';\nimport {withTranslation} from \"react-i18next\";\n\n\nclass NoContent extends Component<any, any> {\n    render() {\n        const {t} = this.props;\n        return (\n            <h6 className=\"w-100 text-center p-5\">{this.props.message ? this.props.message : t('No Content')}</h6>\n        )\n    }\n}\n\nexport default withTranslation(['common'])(NoContent);\n","import React, {Component} from 'react';\nimport {withTranslation} from \"react-i18next\";\nimport NoContent from \"./NoContent\";\n\n\nclass NoContentCard extends Component<any, any> {\n    render() {\n        const {message} = this.props;\n        return (\n            <div className=\"content-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <NoContent message={message}/>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation(['common'])(NoContentCard);\n","import React, {Component} from 'react';\nimport {withTranslation} from \"react-i18next\";\n\n\nclass Loading extends Component<any, any> {\n    render() {\n        const {t} = this.props;\n        return (\n            <div className=\"dot-opacity-loader my-5\">\n                <span className=\"text-info\"/>\n                <span className=\"text-info\"/>\n                <span className=\"text-info\"/>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation(['common'])(Loading);\n","import React, {Component} from 'react';\nimport {withTranslation} from \"react-i18next\";\nimport Loading from \"./Loading\";\n\n\nclass LoadingCard extends Component<any, any> {\n    render() {\n        const {t} = this.props;\n        return (\n            <div className=\"content-wrapper\">\n                <div className=\"row\">\n                    <div className=\"col-lg-12 grid-margin stretch-card\">\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <Loading />\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withTranslation(['common'])(LoadingCard);\n","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport {withLogin} from \"../requireLoginHoc/requireLoginHoc\";\nimport {userStore} from \"./UserStore\";\nimport NoContentCard from \"../../common/component/NoContentCard\";\nimport LoadingCard from \"../../common/component/LoadingCard\";\nimport {number_format} from \"../../common/utils/Utils\";\nimport {Link} from \"react-router-dom\";\nimport {loginStore} from \"../authen/login/LoginStore\";\n\n\n@observer\nclass Index extends Component {\n\n    async componentDidMount() {\n        await userStore.getUser();\n    }\n\n    searchUser(value: number){\n\n    }\n\n    render() {\n        if (userStore.isLoading) {\n            return <LoadingCard/>\n        } else return (\n            <div className=\"user-admin\">\n                <div className=\"content-wrapper\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 grid-margin\">\n                            <div className=\"d-flex align-items-center justify-content-between w-100 mt-3\">\n                                <h2 className=\"mr-4 mb-0\">Accounts</h2>\n                                <div className=\"form-group\" style={{height: \"auto\"}}>\n                                    <input type=\"text\" className=\"form-control\" onChange={(e: any) => this.searchUser(e.currentTarget.value)} placeholder=\"Search\"/>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    {userStore.listUser && userStore.listUser.length > 0 ?\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <div className=\"table-responsive\">\n                                    <table className=\"table\">\n                                        <thead>\n                                        <tr>\n                                            <th>Id</th>\n                                            <th>UserName</th>\n                                            <th>Diamond</th>\n                                            <th>Point</th>\n                                            <th>State</th>\n                                            {/*<th/>*/}\n                                        </tr>\n                                        </thead>\n                                        <tbody>\n                                        {userStore.listUser.map((item, i) => {\n                                            return (\n                                                <tr key={i}>\n                                                    <td><Link className=\"w-100\" to={`/user-detail/${item.id}.html`}>{item.id}</Link></td>\n                                                    <td><Link to={`/user-detail/${item.id}.html`}>{item.username}</Link></td>\n                                                    <th>{number_format(item.wallet.balance)}</th>\n                                                    <th>{number_format(item.point.point)}</th>\n                                                    <td>{item.state}</td>\n                                                    {/*<td className=\"text-right\">*/}\n                                                    {/*    <button type=\"button\" data-toggle=\"modal\"*/}\n                                                    {/*            data-target=\"#deleteAccounts\"*/}\n                                                    {/*            className=\"btn btn-inverse-danger btn-icon\">*/}\n                                                    {/*        <i className=\"fas fa-trash-alt\"/>*/}\n                                                    {/*    </button>*/}\n                                                    {/*</td>*/}\n                                                </tr>\n                                            )\n                                        })}\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div> : <NoContentCard message=\"Chưa có dữ liệu\"/>}\n                </div>\n            </div>\n        );\n\n    }\n}\n\nexport default withLogin(Index);","import {getRequest, postRequest, deleteRequest, IApiResponse} from \"../../common/helpers/RequestHelper\";\n\nclass ConfigService {\n    public getConfig(): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/configs`)\n    }\n\n\n    public addConfig(key: string, value: string): Promise<IApiResponse>{\n        return postRequest(`/v1/metrics/configs`, {key, value})\n    }\n\n    public getByConfig(key: string): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/configs/${key}`)\n    }\n\n    public editConfig(key: string, value: string): Promise<IApiResponse>{\n        return postRequest(`/v1/metrics/configs`, {key, value})\n    }\n\n    public deleteConfig(key: string): Promise<IApiResponse>{\n        return deleteRequest(`/v1/metrics/configs/${key}`, {key})\n    }\n}\n\nexport const configService = new ConfigService();","import {observable} from \"mobx\";\nimport {accountService} from \"../../authen/AccountService\";\nimport HttpStatusCode from \"../../../common/constants/HttpErrorCode\";\nimport $ from \"jquery\";\nimport {configService} from \"../ConfigService\";\n\n\ninterface IConfig {\n    \"key\": string,\n    \"value\": string\n}\n\ninterface IByConfig {\n    \"id\": number,\n    \"key\": string,\n    \"value\": string\n}\n\n\nclass ConfigStore {\n    @observable isLoading: boolean = false;\n    @observable config: IConfig[] = [];\n    @observable isLoadingButton: boolean = false;\n    @observable byConfig: IByConfig = {\"id\": 0, \"key\": '', \"value\": ''};\n    @observable configKey: string = \"\";\n    @observable error: string = \"\";\n    @observable configValue: string = \"\";\n    @observable metadata: { page: number, totalPage: number } = {page: 0, totalPage: 0};\n\n\n    setConfigValue(e: any) {\n        this.configValue = e.target.value;\n    }\n\n    setConfigKey(e: any) {\n        this.configKey = e.target.value;\n    }\n\n    async getConfig() {\n        this.isLoading = true;\n        const response = await configService.getConfig();\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            this.config = response.body.data;\n            this.metadata = response.body.metadata;\n        }\n    }\n\n    async addConfig() {\n        if(!this.configKey || !this.configValue){\n            this.error = \"Vui lòng nhập đầy đủ thông tin\";\n            return false;\n        }else {\n            this.error = \"\";\n        }\n\n        let key = this.configKey;\n        let value = this.configValue;\n        this.isLoadingButton = true;\n        const response = await configService.addConfig(key, value);\n        this.isLoadingButton = false;\n        if (response.status === HttpStatusCode.OK) {\n            this.error = '';\n            $('#close_add').trigger('click');\n            this.configKey = '';\n            this.configValue = '';\n            this.getConfig();\n        }\n    }\n\n    async getByConfig(key: string) {\n        const response = await configService.getByConfig(key);\n        if (response.status === HttpStatusCode.OK) {\n            this.byConfig = response.body;\n        }\n    }\n\n    async editConfig() {\n        if (this.byConfig) {\n            if(!this.byConfig.value){\n                this.error = \"Vui lòng nhập đầy đủ thông tin\";\n                return false;\n            }\n\n            this.isLoadingButton = true;\n            const response = await configService.editConfig(this.byConfig.key, this.byConfig.value);\n            this.isLoadingButton = false;\n            if (response.status === HttpStatusCode.OK) {\n                $('#close_edit').trigger('click');\n                this.config.map((items) => {\n                    if (items.key === this.byConfig?.key) {\n                        items.value = this.byConfig.value;\n                        this.byConfig.value = \"\";\n                        this.error = '';\n                    }\n                })\n            }\n        }\n    }\n\n    async deleteConfig(key: string) {\n        this.isLoadingButton = true;\n        const response = await configService.deleteConfig(key);\n        this.isLoadingButton = false;\n        if (response.status === HttpStatusCode.OK) {\n            $('#close_delete').trigger('click');\n            this.getConfig();\n            this.configKey = '';\n        }\n    }\n}\n\nexport const configStore = new ConfigStore();","import React, {Component} from 'react';\nimport {configStore} from \"../store/ConfigStore\";\nimport {observer} from \"mobx-react\";\nimport {css} from \"@emotion/core\";\n\n@observer\nclass PopupAddConfig extends Component {\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"addConfig\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\">Add Config</h3>\n                            <button type=\"button\" id=\"close_add\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                {configStore.error && <span css={error} className=\"error d-inline-block mb-2\">{configStore.error}</span>}\n                                <div className=\"form-group\">\n                                    <label>Key</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Key\" onChange={(e:any) => configStore.setConfigKey(e)}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Value</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Value\" onChange={(e:any) => configStore.setConfigValue(e)}/>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => configStore.addConfig()}>Create</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupAddConfig;\n\nconst error = css`\n    color = red;\n`;","import React, {Component} from 'react';\nimport {configStore} from \"../store/ConfigStore\";\nimport {observer} from \"mobx-react\";\nimport {css} from \"@emotion/core\";\n\n@observer\nclass PopupEditConfig extends Component {\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"editConfig\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\">Edit Config</h3>\n                            <button type=\"button\" id=\"close_edit\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                {configStore.error && <span css={error} className=\"error d-inline-block mb-2\">{configStore.error}</span>}\n                                <div className=\"form-group\">\n                                    <label>Key</label>\n                                    <input type=\"text\" disabled={true} className=\"form-control\" value={configStore.byConfig.key}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Value</label>\n                                    <input type=\"text\" className=\"form-control\" value={configStore.byConfig.value} onChange={(e:any) => configStore.byConfig.value = e.currentTarget.value}/>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => configStore.editConfig()}>Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupEditConfig;\n\n\nconst error = css`\n    color = red;\n`;","import React, {Component} from 'react';\nimport {configStore} from \"../store/ConfigStore\";\nimport {observer} from \"mobx-react\";\n\n@observer\nclass PopupRemoveConfig extends Component {\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"deleteConfig\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header pt-2 pb-2\">\n                            <button type=\"button\" id=\"close_delete\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <h2 className=\"modal-title w-100 text-center\">Bạn có chắc muốn xóa?</h2>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" onClick={() => configStore.deleteConfig(configStore.configKey)} className=\"btn btn-primary\">Tiếp tục</button>\n                            <button type=\"button\" className=\"btn\" data-dismiss=\"modal\">Hủy</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupRemoveConfig;","import React, {Component} from 'react';\nimport {configStore} from \"./store/ConfigStore\";\nimport {observer} from \"mobx-react\";\nimport NoContentCard from \"../../common/component/NoContentCard\";\nimport LoadingCard from \"../../common/component/LoadingCard\";\nimport {css} from \"@emotion/core\";\nimport PopupAddConfig from \"./components/PopupAddConfig\";\nimport PopupEditConfig from \"./components/PopupEditConfig\";\nimport PopupRemoveConfig from \"./components/PopupRemoveConfig\";\n\n@observer\nclass ConfigComponent extends Component {\n\n    async componentDidMount() {\n        await configStore.getConfig();\n    }\n\n\n    render() {\n        if (configStore.isLoading) {\n            return <LoadingCard/>\n        } else return (\n            <div className=\"config-admin\">\n                <div className='content-wrapper'>\n                    <div className=\"row\">\n                        <div className=\"col-md-12 grid-margin\">\n                            <div className=\"d-flex align-items-center justify-content-between w-100 mt-3\">\n                                <h2 className=\"mr-4 mb-0\">Config</h2>\n                                <button type=\"button\" data-toggle=\"modal\" data-target=\"#addConfig\" className=\"btn btn-outline-info btn-icon-text\">\n                                    <i className=\"fas fa-plus mr-2\"/>Created\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    {configStore.config && configStore.config.length > 0 ?  <div className=\"card\">\n                        <div className=\"card-body\">\n                            <div className=\"table-responsive\">\n                                <table className=\"table\">\n                                    <thead>\n                                    <tr>\n                                        <th>Key</th>\n                                        <th>Value</th>\n                                        <th/>\n                                    </tr>\n                                    </thead>\n                                    <tbody>\n                                    {configStore.config.map((item, i) => {\n                                        return (\n                                            <tr key={i}>\n                                                <td>{item.key}</td>\n                                                <td>{item.value}</td>\n                                                <td className=\"text-right\">\n                                                    <button type=\"button\" className=\"btn btn-icon mr-2\" data-toggle=\"modal\" data-target=\"#editConfig\"\n                                                            onClick={() => configStore.getByConfig(item.key)}>\n                                                        <i className=\"fas fa-pen\"/></button>\n                                                    <button type=\"button\" onClick={() => configStore.configKey = item.key} data-toggle=\"modal\" data-target=\"#deleteConfig\"\n                                                            className=\"btn btn-inverse-danger btn-icon\">\n                                                        <i className=\"fas fa-trash-alt\"/>\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        )\n                                    })}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div> :  <NoContentCard message=\"Chưa có dữ liệu\"/>}\n                </div>\n\n                <PopupEditConfig/>\n\n               <PopupRemoveConfig/>\n\n                <PopupAddConfig/>\n            </div>\n        );\n    }\n}\n\nexport default ConfigComponent;\n\n\n","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport {observable} from \"mobx\";\nimport {userStore} from \"../UserStore\";\n\ninterface IProps {\n    match: {\n        params: {userId: any}\n    }\n}\n\n\n@observer\nclass DetailUser extends Component<IProps, any> {\n    @observable userId: number = 0;\n\n    async componentDidMount() {\n        this.userId = this.props.match.params.userId;\n        await userStore.detailUser(this.userId);\n    }\n\n    render() {\n        return (\n            <div className=\"detail-user\">\n                <div className=\"content-wrapper\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DetailUser;","import {deleteRequest, getRequest, IApiResponse, postRequest, putRequest} from \"../../common/helpers/RequestHelper\";\n\nclass LeagueService {\n\n    public getLeagues(): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/leagues`);\n    }\n\n    public addLeague(partnerId: number, logo: string, name: string, season: string, active: boolean): Promise<IApiResponse>{\n        return postRequest(`/v1/metrics/leagues`, {partnerId, logo, name, season, active})\n    }\n\n    public getByLeague(leagueId: number): Promise<IApiResponse>{\n        return getRequest(`/v1/metrics/leagues/${leagueId}`)\n    }\n\n    public editLeague(leagueId: number, partnerId: number, logo: string, name: string, season: string, active: boolean): Promise<IApiResponse>{\n        return putRequest(`/v1/metrics/leagues/${leagueId}`, {partnerId, logo, name, season, active})\n    }\n\n    public deleteLeague(leagueId: number): Promise<IApiResponse>{\n        return deleteRequest(`/v1/metrics/leagues/${leagueId}`, {leagueId})\n    }\n\n    public publish(leagueIds: number[]) {\n        return postRequest(`/v1/metrics/leagues/reorder`, {leagueIds})\n\n    }\n\n}\n\nexport const leagueService =  new LeagueService();\n","import {observable} from \"mobx\";\nimport HttpStatusCode from \"../../../common/constants/HttpErrorCode\";\nimport {leagueService} from \"../LeagueService\";\nimport $ from \"jquery\";\nimport {toastUtil} from \"../../../common/utils/ToastUtil\";\n\n\ninterface League {\n    \"id\": number,\n    \"name\": string,\n    \"logo\": string,\n    \"season\": string,\n    \"active\": boolean,\n    \"partnerId\": number,\n    \"sort\": number\n}\n\n\nclass LeagueStore {\n\n    @observable isChanged: boolean = false;\n    @observable isLoading: boolean = false;\n    @observable leagues: League[] = [];\n    @observable errorAdd: string = '';\n    @observable errorEdit: string = '';\n    @observable leagueId: number = 0;\n    @observable byLeagues: League = {\"id\": -1, \"name\": '', \"partnerId\": -1, \"logo\": '', \"season\": '', \"active\": true, \"sort\": -1};\n    @observable isLoadingButton: boolean = false;\n    @observable addLeague: {partnerId: number, logo: string, name: string, season: string, active: boolean} =\n        {partnerId: 0, logo: '', name: '', season: '', active: true};\n\n    publish = async () => {\n        const ids: number[] = this.leagues.map(member => member.id)\n\n        //loading button publish\n        const response = await leagueService.publish(ids);\n        // hide loading button publish\n        if (response.status === HttpStatusCode.OK) {\n            toastUtil.success(\"Update Success\")\n            this.isChanged = false\n        } else {\n            toastUtil.error(\"Error\")\n        }\n    }\n\n    reorder = (startIndex: number, endIndex: number) => {\n        const result: League[] = Array.from(this.leagues)\n        const [removed] = result.splice(startIndex, 1)\n        result.splice(endIndex, 0, removed)\n\n        //resort\n        result.forEach(function (league, index) {\n            league.sort = index\n        })\n\n        this.leagues = result;\n    }\n\n\n    async getLeagues() {\n        this.isLoading = true;\n        const response = await leagueService.getLeagues();\n        this.isLoading = false;\n        if (response.status === HttpStatusCode.OK) {\n            this.leagues = response.body;\n        }\n    }\n\n    clearForm(){\n        this.addLeague = {partnerId: -1, logo: '', name: '', season: '', active: false};\n        this.byLeagues = {id: -1, partnerId: -1, logo: '', name: '', season: '', active: false, sort: -1}\n    }\n\n    async getByLeagues(leagueId: number){\n        leagueStore.errorEdit = '';\n        const response = await leagueService.getByLeague(leagueId);\n\n        if (response.status === HttpStatusCode.OK) {\n            this.byLeagues = response.body;\n        }\n    }\n\n\n    async addLeagues(){\n\n        if(!this.addLeague.partnerId || !this.addLeague.logo || !this.addLeague.name || !this.addLeague.season){\n            this.errorAdd = \"Vui lòng nhập đầy đủ thông tin\";\n            return false;\n        }\n\n        const response = await leagueService.addLeague(this.addLeague.partnerId, this.addLeague.logo, this.addLeague.name, this.addLeague.season, this.addLeague.active);\n\n        if (response.status === HttpStatusCode.OK) {\n            $('.modal-backdrop').trigger('click');\n            $('#close_add_league').trigger('click');\n            this.getLeagues();\n            this.clearForm();\n            this.errorAdd = '';\n        }\n    }\n\n\n    async editLeagues(){\n\n        if(!this.byLeagues.partnerId || !this.byLeagues.logo || !this.byLeagues.name || !this.byLeagues.season || !this.byLeagues.sort){\n            this.errorEdit = \"Vui lòng nhập đầy đủ thông tin\";\n            return false;\n        }\n\n        const response = await leagueService.editLeague(this.byLeagues.id, this.byLeagues.partnerId, this.byLeagues.logo, this.byLeagues.name, this.byLeagues.season, this.byLeagues.active);\n\n        if (response.status === HttpStatusCode.OK) {\n            this.leagues.map((item) => {\n                if(item.id === this.byLeagues.id){\n                    item.partnerId = this.byLeagues.partnerId;\n                    item.name = this.byLeagues.name;\n                    item.logo = this.byLeagues.logo;\n                    item.season = this.byLeagues.season;\n                    item.active = this.byLeagues.active;\n                    item.sort = this.byLeagues.sort;\n                }\n            });\n            this.errorEdit = '';\n            this.clearForm();\n            $('.modal-backdrop').trigger('click');\n            $('#close_edit_league').trigger('click');\n        }\n    }\n\n    async deleteLeagues(leagueId: number){\n        const response = await leagueService.deleteLeague(leagueId);\n        if (response.status === HttpStatusCode.OK) {\n            $('.modal-backdrop').trigger('click');\n            $('#close_delete_league').trigger('click');\n            this.getLeagues();\n        }\n    }\n}\n\nexport const leagueStore = new LeagueStore();\n","import React, {Component} from 'react';\nimport {leagueStore} from \"../store/LeagueStore\";\nimport {observer} from \"mobx-react\";\n\n\n@observer\nclass PopupAddLeague extends Component<any, any> {\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"addLeague\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\">Add League</h3>\n                            <button type=\"button\" id=\"close_add_league\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                {leagueStore.errorAdd && <span className=\"error d-inline-block mb-2\">{leagueStore.errorAdd}</span>}\n                                <div className=\"form-group\">\n                                    <label>Logo</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Logo\" onChange={(e:any) => leagueStore.addLeague.logo = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>PartnerId</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"PartnerId\" onChange={(e:any) => leagueStore.addLeague.partnerId = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Name\" onChange={(e:any) => leagueStore.addLeague.name = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Season</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Season\" onChange={(e:any) => leagueStore.addLeague.season = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Active</label>\n                                    <select onChange={(e:any) => leagueStore.addLeague.active = e.currentTarget.value} className=\"form-control\">\n                                        <option value=\"true\">True</option>\n                                        <option value=\"false\">False</option>\n                                    </select>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => leagueStore.addLeagues()}>Create</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupAddLeague;\n","import React, {Component} from 'react';\nimport {leagueStore} from \"../store/LeagueStore\";\nimport {observer} from \"mobx-react\";\n\n\n@observer\nclass PopupEditLeague extends Component {\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"editLeague\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h3 className=\"modal-title\">Edit League</h3>\n                            <button type=\"button\" id=\"close_edit_league\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <form>\n                                {leagueStore.errorEdit && <span className=\"error d-inline-block mb-2\">{leagueStore.errorEdit}</span>}\n                                <div className=\"form-group\">\n                                    <label>Logo</label>\n                                    <input type=\"text\" className=\"form-control\" value={leagueStore.byLeagues.logo} placeholder=\"Logo\" onChange={(e:any) => leagueStore.byLeagues.logo = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>PartnerId</label>\n                                    <input type=\"number\" className=\"form-control\" value={leagueStore.byLeagues.partnerId} placeholder=\"LeagueId\" onChange={(e:any) => leagueStore.byLeagues.partnerId = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Name</label>\n                                    <input type=\"text\" className=\"form-control\" value={leagueStore.byLeagues.name} placeholder=\"Name\" onChange={(e:any) => leagueStore.byLeagues.name = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Season</label>\n                                    <input type=\"text\" className=\"form-control\" value={leagueStore.byLeagues.season} placeholder=\"Season\" onChange={(e:any) => leagueStore.byLeagues.season = e.currentTarget.value}/>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label>Active</label>\n                                    <select value={leagueStore.byLeagues.active ? \"true\" : \"false\"} onChange={(e:any) => leagueStore.byLeagues.active = e.currentTarget.value} className=\"form-control\">\n                                        <option value={leagueStore.byLeagues.active ? \"true\" : \"false\"}>{leagueStore.byLeagues.active ? \"True\" : \"False\"}</option>\n                                        <option value={leagueStore.byLeagues.active ? \"false\" : \"true\"}>{leagueStore.byLeagues.active ? \"False\" : \"True\"}</option>\n                                    </select>\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={() => leagueStore.editLeagues()}>Save</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupEditLeague;\n","import React, {Component} from 'react';\nimport {observer} from \"mobx-react\";\nimport {leagueStore} from \"../store/LeagueStore\";\n\n@observer\nclass PopupRemoveLeague extends Component {\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"deleteLeague\" tabIndex={-1} role=\"dialog\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header pt-2 pb-2\">\n                            <button type=\"button\" id=\"close_delete_league\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <h2 className=\"modal-title w-100 text-center\">Bạn có chắc muốn xóa?</h2>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" onClick={() => leagueStore.deleteLeagues(leagueStore.leagueId)} className=\"btn btn-primary\">Tiếp tục</button>\n                            <button type=\"button\" className=\"btn\" data-dismiss=\"modal\">Hủy</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PopupRemoveLeague;","import React, {Component} from \"react\";\nimport {observer} from \"mobx-react\";\nimport LoadingCard from \"../../common/component/LoadingCard\";\nimport {DragDropContext, Draggable, Droppable} from \"react-beautiful-dnd\";\nimport {Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow} from \"@material-ui/core\";\nimport {leagueStore} from \"./store/LeagueStore\";\nimport \"./style/leagueStyle.scss\";\nimport NoContentCard from \"../../common/component/NoContentCard\";\nimport PopupAddLeague from \"./components/PopupAddLeague\";\nimport PopupEditLeague from \"./components/PopupEditLeague\";\nimport PopupRemoveLeague from \"./components/PopupRemoveLeague\";\n\n\n@observer\nexport default class LeagueComponent extends Component {\n\n    constructor(props: any) {\n        super(props);\n        this.onDragEnd = this.onDragEnd.bind(this)\n    }\n\n    async componentDidMount() {\n        await leagueStore.getLeagues();\n    }\n\n    onPublishClick = () => {\n        leagueStore.publish()\n    }\n\n    onDragEnd(result: any) {\n        if (!result.destination) {\n            return\n        }\n\n        console.log(`dragEnd ${result.source.index} to  ${result.destination.index}`)\n\n        leagueStore.reorder(\n            result.source.index,\n            result.destination.index\n        )\n\n        leagueStore.isChanged = true;\n    }\n\n    render() {\n        if (leagueStore.isLoading) {\n            return <LoadingCard/>\n        } else return (\n            <div className=\"leagues\">\n                <div className=\"content-wrapper\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 grid-margin\">\n                            <div className=\"d-flex align-items-center justify-content-between w-100 mt-3\">\n                                <h2 className=\"mr-4 mb-0\">Leagues</h2>\n\n                                <button type=\"button\" data-toggle=\"modal\" data-target=\"#addLeague\" onClick={() => leagueStore.errorAdd = ''}\n                                        className=\"btn btn-outline-info btn-icon-text\">\n                                    <i className=\"fas fa-plus mr-2\"/>Created\n                                </button>\n\n                                <button className={leagueStore.isChanged ? \"btn btn-info btn-icon-text\": \"btn btn-info btn-icon-text disabled\"} type=\"button\" onClick={() => this.onPublishClick()}>Publish</button>\n                            </div>\n                        </div>\n                    </div>\n                    {leagueStore.leagues && leagueStore.leagues.length > 0 ?\n                        <TableContainer component={Paper}>\n                            <Table>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>#</TableCell>\n                                        <TableCell>Logo</TableCell>\n                                        <TableCell>Name</TableCell>\n                                        <TableCell>PartnerId</TableCell>\n                                        <TableCell>Season</TableCell>\n                                        <TableCell>Active</TableCell>\n                                        <TableCell/>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody component={DroppableComponent(this.onDragEnd)}>\n                                    {leagueStore.leagues.map((item, index) => (\n                                        <TableRow component={DraggableComponent(item.id.toString(), index)} key={item.id}>\n                                            <TableCell scope=\"row\">{index + 1}</TableCell>\n                                            <TableCell><img src={item.logo} alt=\"\"/></TableCell>\n                                            <TableCell>{item.name}</TableCell>\n                                            <TableCell>{item.partnerId}</TableCell>\n                                            <TableCell>{item.season}</TableCell>\n                                            <TableCell>{item.active ? \"True\" : \"False\"}</TableCell>\n                                            <TableCell align=\"right\">\n                                                <button type=\"button\" className=\"btn btn-icon mr-2\" data-toggle=\"modal\" data-target=\"#editLeague\"\n                                                        onClick={() => leagueStore.getByLeagues(item.id)}>\n                                                    <i className=\"fas fa-pen\"/></button>\n                                                <button type=\"button\" data-toggle=\"modal\" data-target=\"#deleteLeague\"\n                                                      onClick={() => leagueStore.leagueId = item.id}  className=\"btn btn-inverse-danger btn-icon\">\n                                                    <i className=\"fas fa-trash-alt\"/>\n                                                </button>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer> :\n                        <NoContentCard message=\"Chưa có dữ liệu\"/>\n                    }\n                </div>\n\n                <PopupAddLeague/>\n                <PopupRemoveLeague/>\n                <PopupEditLeague/>\n            </div>\n        )\n    }\n\n\n}\n\n\n// @ts-ignore\nconst getItemStyle = (isDragging, draggableStyle) => ({\n    // styles we need to apply on draggables\n    ...draggableStyle,\n\n    ...(isDragging && {\n        background: \"rgb(235,235,235)\"\n    })\n})\n\nconst DraggableComponent = (id: string, index: number) => (props: any) => {\n    return (\n        <Draggable draggableId={id} index={index}>\n            {(provided, snapshot) => (\n                <TableRow\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    style={getItemStyle(snapshot.isDragging, provided.draggableProps.style)}\n\n                    {...props}\n                >\n                    {props.children}\n                </TableRow>\n            )}\n        </Draggable>\n    )\n}\n\nconst DroppableComponent = (\n    onDragEnd: (result: any, provided: any) => void) => (props: any) => {\n    return (\n        <DragDropContext onDragEnd={onDragEnd}>\n            <Droppable droppableId={'1'} direction=\"vertical\">\n                {(provided) => {\n                    return (\n                        <TableBody ref={provided.innerRef} {...provided.droppableProps} {...props}>\n                            {props.children}\n                            {provided.placeholder}\n                        </TableBody>\n                    )\n                }}\n            </Droppable>\n        </DragDropContext>\n    )\n}\n","import React from 'react';\nimport {Route} from 'react-router-dom';\nimport LoginComponent from \"../authen/login/LoginComponent\";\nimport Role from '../role/index'\nimport UserAdmin from \"../user\";\nimport ConfigComponent from \"../config/ConfigComponent\";\nimport DetailUser from \"../user/components/DetailUser\";\nimport LeagueComponent from \"../league/LeagueComponent\";\n\n\nexport default function Redirect() {\n    return (\n        <div>\n            <Route exact path=\"/\" component={Role}/>\n            <Route path={`/login`} component={LoginComponent}/>\n            <Route path={`/user`} component={UserAdmin}/>\n            <Route path={`/config`} component={ConfigComponent}/>\n            <Route path={`/user-detail/:userId.html`} component={DetailUser}/>\n            <Route path={`/league`} component={LeagueComponent}/>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport {loginStore} from \"../authen/login/LoginStore\";\nimport { Link } from 'react-router-dom';\nimport { css } from '@emotion/core';\nimport {profileStore} from \"../profile/ProfileStore\";\n\nconst logoProfile = css`\n    color: #3e3c4f;\n    border: none;\n    width: 35px;\n    height: 35px;\n    background-color: rgba(129, 125, 161, 0.18);\n`;\nconst cssLogo = css`\n    max-width: 92% !important;\n    height: auto !important;\n`;\n\nconst css_left = css`\n    padding-left: 10px !important;\n`;\n\nconst css_nav = css`\n&:after {\n    content: \"\";\n    position: absolute;\n    top: 100%;\n    left: 0;\n    width: 100%;\n    height: 2px;\n    background: linear-gradient(rgba(48,56,70,.2),rgba(48,56,70,0));\n    pointer-events: none;\n    z-index: 4;\n}\n`;\n\n@observer\nclass Nav extends Component {\n    render() {\n      \n        if(profileStore.isProfile){\n            return (\n                <nav css={css_nav} className=\"navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row\">\n                    <div className=\"navbar-brand-wrapper d-flex align-items-center\" css={css_left}>\n                    <Link to=\"/\" className=\"navbar-brand brand-logo\">\n                        <img css={cssLogo} src={''} alt=\"\"/>\n                    </Link>\n                    </div>\n                    <div className=\"navbar-menu-wrapper d-flex align-items-center justify-content-end\">\n                    <button className=\"navbar-toggler navbar-toggler align-self-center\" type=\"button\" data-toggle=\"minimize\">\n                        <span className=\"fas fa-align-justify\" />\n                    </button>\n                    \n                    <ul className=\"navbar-nav navbar-nav-right\">\n                        <li className=\"nav-item dropdown mr-2\">\n                            <a className=\"nav-link count-indicator dropdown-toggle d-flex justify-content-center align-items-center\" id=\"messageDropdown\" href=\"#\" data-toggle=\"dropdown\">\n                                <i className=\"fas fa-envelope mx-0\" />\n                                <span className=\"count\" />\n                            </a>\n                        </li>\n                        <li className=\"nav-item dropdown mr-4\">\n                            <a className=\"nav-link count-indicator dropdown-toggle d-flex align-items-center justify-content-center\" id=\"notificationDropdown\" href=\"#\" data-toggle=\"dropdown\">\n                                <i className=\"fas fa-bell mx-0\" />\n                                <span className=\"count\" />\n                            </a>\n                        </li>\n                        <li className=\"nav-item nav-profile dropdown\">\n                            <a className=\"nav-link\" href=\"#\" data-toggle=\"dropdown\" id=\"profileDropdown\">\n                                <button type=\"button\" css={logoProfile} className=\"btn btn-info btn-rounded btn-icon\">\n                                    {profileStore.getProfile?.fullName.slice(0, 1)}\n                                </button>\n                            </a>\n                        <div className=\"dropdown-menu dropdown-menu-right navbar-dropdown\" aria-labelledby=\"profileDropdown\">\n                            <Link to={`/profile`} className=\"dropdown-item\">\n                            <i className=\"fa fa-cog text-info\" />\n                            Profile\n                            </Link>\n                            <a className=\"dropdown-item\" onClick={()=> loginStore.logOut()}>\n                            <i className=\"fa fa-sign-out text-info\"/>\n                            Logout\n                            </a>\n                        </div>\n                        </li>\n                    </ul>\n                    </div>\n                </nav>\n            );\n        }\n        else return true\n    }\n}\n\nexport default Nav;","import React, {Component} from 'react';\nimport {observer} from 'mobx-react';\nimport {Link} from 'react-router-dom';\nimport \"./styles/sidebar.scss\";\nimport {profileStore} from \"../profile/ProfileStore\";\n\n@observer\nclass SideBar extends Component {\n    state={\n        link:\"\"\n    };\n    data:any = [\n        {\n            \"id\": 0,\n            \"name\": \"Dashboard\",\n            \"icon\": \"fas fa-user-friends\",\n            \"rootMenu\": '/dashboard',\n\n        },\n        {\n            \"id\": 1,\n            \"name\": \"User\",\n            \"icon\": \"fas fa-user-friends\",\n            \"rootMenu\": '/user'\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Leagues\",\n            \"icon\": \"fas fa-user-friends\",\n            \"rootMenu\": '/league'\n        },\n        {\n            \"id\": 3,\n            \"name\": \"Config\",\n            \"icon\": \"fas fa-user-friends\",\n            \"rootMenu\": '/config'\n        }\n    ];\n\n    getRootPath() {\n        const names = window.location.pathname.split(\"/\")\n        this.setState({link:\"/\" + names[1]})\n        // alert(1)\n        return \"/\" + names[1];\n    }\n    componentDidMount(){\n        setTimeout(()=>{\n            this.getRootPath()\n        })\n    }\n    render() {\n        window.scroll(0, 0);\n        if (profileStore.getProfile) {\n            return (\n                <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\n                    <ul className=\"nav\">\n                        <li className=\"profile\">\n                            <Link to={`/profile`} className=\"profile-wrapper\">\n                                <button type=\"button\" className=\"btn btn-primary avatar btn-social-icon btn-rounded\">\n                                    {profileStore.getProfile.fullName.slice(0, 1)}\n                                </button>\n                                <div className=\"profile-details\">\n                                    <p className=\"name\">{profileStore.getProfile.fullName}</p>\n                                </div>\n                            </Link>\n                        </li>\n                        {this.data.map((item:any, i:any) => {\n                            let navItem = \"nav-item active\";\n                            return (\n                                <li className={navItem} key={i}>\n                                    <Link className=\"nav-link w-100 d-flex justify-content-between align-items-center\" to={item.rootMenu}>\n                                        {/*<i className={item.icon + \" menu-icon\"}/>*/}\n                                        <span className=\"menu-title\">{item.name}</span>\n                                        <i className=\"fal fa-angle-right\"/>\n                                    </Link>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </nav>\n            );\n        } else return true\n    }\n}\n\nexport default SideBar;\n\n","import React, {Component} from 'react';\nimport \"./App.scss\";\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport {observer} from \"mobx-react\";\nimport StorageService from \"./common/service/StorageService\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ToastContainer} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {profileStore} from \"./modules/profile/ProfileStore\";\nimport {loginStore} from \"./modules/authen/login/LoginStore\";\nimport Redirect from \"./modules/router/router\";\nimport Nav from './modules/layouts/Nav';\nimport SideBar from './modules/layouts/SideBar';\n\n@observer\nexport default class App extends Component {\n\n    constructor(props: any) {\n        super(props);\n        this.checkUUID();\n    }\n\n    async componentDidMount() {\n        loginStore.isLogin = StorageService.isTokenExits();\n        if (StorageService.isTokenExits()) {\n            await profileStore.getProfiles();\n        }\n    }\n\n\n    async checkUUID() {\n        const uuid: string | null = StorageService.getUUID();\n        if (!uuid) {\n            const userId: string = uuidv4();\n            StorageService.setUUID(userId);\n        }\n    }\n\n    render() {\n        if (profileStore.isProfile) {\n            return (\n                <div>\n                    <Router>\n                        <div className=\"container-scroller\">\n                            <Nav/>\n                            <div className=\"container-fluid page-body-wrapper\">\n                                <SideBar/>\n                                <div className=\"main-panel\">\n                                    <Redirect/>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </Router>\n                    <ToastContainer/>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Router>\n                        <Redirect/>\n                    </Router>\n                    <ToastContainer/>\n                </div>\n            )\n        }\n    }\n\n\n}\n\n\n","// This optional code is used to signUp a service worker.\n// signUp() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just signUp service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import i18next from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18next\n    .use(Backend)\n    //.use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n      lng: 'vi',\n      ns:['common'],\n      defaultNS:'common',\n      keySeparator: false,\n      fallbackLng: 'vi',\n      react: {\n        wait: true,\n      },\n      debug: true,\n      whitelist: ['en', 'vi'],\n      interpolation: {\n          escapeValue: false,\n      },\n      backend: {\n        loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n      }\n    });\n\nexport default i18next;\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './i18next';\n\nReactDOM.render(\n        <Suspense fallback={(<div>Loading</div>)}>\n            <App />\n        </Suspense>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to signUp() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}